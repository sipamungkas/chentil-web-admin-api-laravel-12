name: Build Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate .env from secrets
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_ENV: ${{ secrets.APP_ENV }}
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_DEBUG: ${{ secrets.APP_DEBUG }}
          APP_URL: ${{ secrets.APP_URL }}
          LOG_CHANNEL: ${{ secrets.LOG_CHANNEL }}
          LOG_DEPRECATIONS_CHANNEL: ${{ secrets.LOG_DEPRECATIONS_CHANNEL }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SESSION_DRIVER: ${{ secrets.SESSION_DRIVER }}
          SESSION_LIFETIME: ${{ secrets.SESSION_LIFETIME }}
          REDIS_CLIENT: ${{ secrets.REDIS_CLIENT }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          MAIL_MAILER: ${{ secrets.MAIL_MAILER }}
          MAIL_SCHEME: ${{ secrets.MAIL_SCHEME }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM_ADDRESS: ${{ secrets.MAIL_FROM_ADDRESS }}
          MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_URL: ${{ secrets.AWS_URL }}
          AWS_USE_PATH_STYLE_ENDPOINT: ${{ secrets.AWS_USE_PATH_STYLE_ENDPOINT }}
          VITE_APP_NAME: ${{ secrets.VITE_APP_NAME }}
        run: |
          awk -F= 'NF && $1 !~ /^#/ {print $1}' .env.example | while read key; do
            value="$(echo "${!key}" | xargs)" # Trim whitespace
            if [ -n "$value" ]; then
              esc_value=$(printf '%s\n' "$value" | sed -e 's/[\\/&]/\\\\&/g')
              echo "$key=$esc_value" >> .env.tmp
            else
              grep -E "^$key=" .env.example >> .env.tmp || true
            fi
          done
          mv .env.tmp .env
          # Remove lines with only whitespace
          sed -i '/^[[:space:]]*$/d' .env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
